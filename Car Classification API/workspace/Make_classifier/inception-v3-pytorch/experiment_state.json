{
    "verbose": 1,
    "cwd": "/content/drive/My Drive/PilotTask/",
    "master_systems_dir": "/content/drive/My Drive/PilotTask/workspace/",
    "master_systems_dir_relative": "workspace/",
    "project_name": "Make_classifier",
    "project_dir": "/content/drive/My Drive/PilotTask/workspace/Make_classifier/",
    "project_dir_relative": "workspace/Make_classifier/",
    "experiment_name": "inception-v3-pytorch",
    "experiment_dir": "/content/drive/My Drive/PilotTask/workspace/Make_classifier/inception-v3-pytorch/",
    "experiment_dir_relative": "workspace/Make_classifier/inception-v3-pytorch/",
    "origin": [
        "New",
        "New"
    ],
    "master_comparison_dir": "/content/drive/My Drive/PilotTask/workspace/comparison/",
    "master_comparison_dir_relative": "workspace/comparison/",
    "library": "Pytorch",
    "output_dir": "/content/drive/My Drive/PilotTask/workspace/Make_classifier/inception-v3-pytorch/output/",
    "output_dir_relative": "workspace/Make_classifier/inception-v3-pytorch/output/",
    "model_dir": "/content/drive/My Drive/PilotTask/workspace/Make_classifier/inception-v3-pytorch/output/models/",
    "model_dir_relative": "workspace/Make_classifier/inception-v3-pytorch/output/models/",
    "log_dir": "/content/drive/My Drive/PilotTask/workspace/Make_classifier/inception-v3-pytorch/output/logs/",
    "log_dir_relative": "workspace/Make_classifier/inception-v3-pytorch/output/logs/",
    "fname": "/content/drive/My Drive/PilotTask/workspace/Make_classifier/inception-v3-pytorch//experiment_state.json",
    "fname_relative": "workspace/Make_classifier/inception-v3-pytorch//experiment_state.json",
    "dataset": {
        "dataset_type": "csv_train",
        "label_type": "single",
        "train_path": "data/cars_train",
        "val_path": null,
        "csv_train": "vehicles_make.csv",
        "csv_val": null,
        "test_path": false,
        "csv_test": false,
        "params": {
            "input_size": 299,
            "data_shape": false,
            "batch_size": 128,
            "train_shuffle": true,
            "num_workers": 3,
            "weighted_sample": false,
            "num_classes": 49,
            "classes": [
                "AM",
                "Acura",
                "Aston",
                "Audi",
                "BMW",
                "Bentley",
                "Bugatti",
                "Buick",
                "Cadillac",
                "Chevrolet",
                "Chrysler",
                "Daewoo",
                "Dodge",
                "Eagle",
                "FIAT",
                "Ferrari",
                "Fisker",
                "Ford",
                "GMC",
                "Geo",
                "HUMMER",
                "Honda",
                "Hyundai",
                "Infiniti",
                "Isuzu",
                "Jaguar",
                "Jeep",
                "Lamborghini",
                "Land",
                "Lincoln",
                "MINI",
                "Maybach",
                "Mazda",
                "McLaren",
                "Mercedes-Benz",
                "Mitsubishi",
                "Nissan",
                "Plymouth",
                "Porsche",
                "Ram",
                "Rolls-Royce",
                "Scion",
                "Spyker",
                "Suzuki",
                "Tesla",
                "Toyota",
                "Volkswagen",
                "Volvo",
                "smart"
            ],
            "num_train_images": 6515,
            "num_val_images": 1629,
            "num_test_images": false,
            "delimiter": ",",
            "test_delimiter": ",",
            "dataset_test_type": false,
            "train_val_split": 0.8,
            "val_shuffle": true
        },
        "transforms": {
            "train": [
                {
                    "RandomHorizontalFlip": {
                        "p": 0.5
                    }
                },
                {
                    "Normalize": {
                        "mean": [
                            0.485,
                            0.456,
                            0.406
                        ],
                        "std": [
                            0.229,
                            0.224,
                            0.225
                        ]
                    }
                }
            ],
            "val": [
                {
                    "RandomHorizontalFlip": {
                        "p": 0.5
                    }
                },
                {
                    "Normalize": {
                        "mean": [
                            0.485,
                            0.456,
                            0.406
                        ],
                        "std": [
                            0.229,
                            0.224,
                            0.225
                        ]
                    }
                }
            ],
            "test": [
                {
                    "Normalize": {
                        "mean": [
                            0.485,
                            0.456,
                            0.406
                        ],
                        "std": [
                            0.229,
                            0.224,
                            0.225
                        ]
                    }
                }
            ]
        },
        "status": true
    },
    "model": {
        "status": true,
        "final_layer": false,
        "type": "pretrained",
        "custom_network": [],
        "params": {
            "model_name": "inception_v3",
            "model_path": false,
            "use_gpu": true,
            "use_pretrained": true,
            "freeze_base_network": true,
            "num_layers": 194,
            "num_params_to_update": 95,
            "num_freeze": false,
            "gpu_memory_fraction": 0.6
        }
    },
    "custom_model": {
        "status": false,
        "network_stack": [],
        "network_initializer": false
    },
    "hyper-parameters": {
        "status": true,
        "learning_rate": 0.06,
        "num_epochs": 5,
        "optimizer": {
            "name": "sgd",
            "params": {
                "lr": 0.06,
                "momentum": 0,
                "weight_decay": 0,
                "momentum_dampening_rate": 0,
                "clipnorm": 0.0,
                "clipvalue": 0.0
            }
        },
        "learning_rate_scheduler": {
            "name": "fixed",
            "params": {}
        },
        "loss": {
            "name": "softmaxcrossentropy",
            "params": {
                "weight": null,
                "batch_axis": 0,
                "axis_to_sum_over": -1,
                "label_as_categories": true,
                "label_smoothing": false
            }
        }
    },
    "training": {
        "settings": {
            "display_progress_realtime": true,
            "display_progress": true,
            "save_intermediate_models": true,
            "save_training_logs": true,
            "intermediate_model_prefix": "intermediate_model_"
        },
        "outputs": {
            "max_gpu_memory_usage": 7495,
            "best_val_acc": "0.721915",
            "best_val_acc_epoch_num": 4,
            "epochs_completed": 5,
            "training_time": "37m 0s",
            "max_gpu_usage": "7495 Mb",
            "log_val_acc_history": "/content/drive/My Drive/PilotTask/workspace/Make_classifier/inception-v3-pytorch/output/logs/val_acc_history.npy",
            "log_val_loss_history": "/content/drive/My Drive/PilotTask/workspace/Make_classifier/inception-v3-pytorch/output/logs/val_loss_history.npy",
            "log_train_acc_history": "/content/drive/My Drive/PilotTask/workspace/Make_classifier/inception-v3-pytorch/output/logs/train_acc_history.npy",
            "log_train_loss_history": "/content/drive/My Drive/PilotTask/workspace/Make_classifier/inception-v3-pytorch/output/logs/train_loss_history.npy",
            "log_val_acc_history_relative": "workspace/Make_classifier/inception-v3-pytorch/output/logs/val_acc_history.npy",
            "log_val_loss_history_relative": "workspace/Make_classifier/inception-v3-pytorch/output/logs/val_loss_history.npy",
            "log_train_acc_history_relative": "workspace/Make_classifier/inception-v3-pytorch/output/logs/train_acc_history.npy",
            "log_train_loss_history_relative": "workspace/Make_classifier/inception-v3-pytorch/output/logs/train_loss_history.npy"
        },
        "status": true
    },
    "testing": {
        "status": false,
        "num_images": false,
        "num_correct_predictions": false,
        "percentage_accuracy": false,
        "class_accuracy": false
    },
    "states": {
        "eval_infer": false,
        "resume_train": false,
        "copy_from": false,
        "pseudo_copy_from": false
    },
    "local": {
        "projects_list": [],
        "num_projects": false,
        "experiments_list": [],
        "num_experiments": false,
        "project_experiment_list": [],
        "transforms_train": [],
        "transforms_val": [],
        "transforms_test": [],
        "normalize": false,
        "mean_subtract": false,
        "applied_train_tensor": false,
        "applied_test_tensor": false,
        "data_transforms": {},
        "image_datasets": {},
        "data_loaders": {},
        "data_generators": {},
        "model": false,
        "custom_model": false,
        "ctx": false,
        "params_to_update": [],
        "device": false,
        "learning_rate_scheduler": false,
        "optimizer": false,
        "criterion": false
    },
    "visualization": {
        "base": "/content/drive/My Drive/PilotTask/workspace/Make_classifier/inception-v3-pytorch/visualization/",
        "kernels_dir": "/content/drive/My Drive/PilotTask/workspace/Make_classifier/inception-v3-pytorch/visualization/kernels/",
        "feature_maps_dir": "/content/drive/My Drive/PilotTask/workspace/Make_classifier/inception-v3-pytorch/visualization/feature_maps/"
    }
}